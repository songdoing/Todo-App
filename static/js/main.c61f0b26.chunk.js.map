{"version":3,"sources":["components/TodoTemplate.js","components/TodoInsert.js","components/TodoListItem.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoTemplate","children","className","TodoInsert","onInsert","useState","value","setValue","onChange","useCallback","e","target","onSubmit","preventDefault","placeholder","type","TodoListItem","todo","onRemove","onToggle","style","id","text","checked","cn","onClick","React","memo","prevProps","nestProps","TodoList","todos","rowRenderer","index","key","width","height","rowCount","length","rowHeight","list","outline","createBulkTodos","array","i","push","App","setTodos","nextId","useRef","current","concat","filter","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c61f0b26.chunk.js","sourcesContent":["import React from 'react';\r\nimport './TodoTemplate.scss';\r\n\r\nconst TodoTemplate = ({children}) => {\r\n    return (\r\n        <div className = \"TodoTemplate\">\r\n            <div className=\"app-title\">Schedule Management</div>\r\n            <div className=\"content\">{children}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoTemplate;","import React, { useState, useCallback } from 'react';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport './TodoInsert.scss';\r\n\r\nconst TodoInsert = ( {onInsert} ) => {\r\n    const [value, setValue] = useState('');\r\n\r\n    const onChange = useCallback(e => {\r\n        setValue(e.target.value);\r\n    }, []);\r\n    const onSubmit = useCallback(\r\n        e => {\r\n            onInsert(value);\r\n            setValue(''); //reset value\r\n            e.preventDefault();\r\n        },\r\n        [onInsert, value],\r\n    );\r\n\r\n    return (\r\n        <form className=\"TodoInsert\" onSubmit={onSubmit}>\r\n            <input placeholder = \"Make new schedule.\" \r\n                value = {value}\r\n                onChange = {onChange}\r\n            />\r\n            <button type = \"submit\">\r\n                <MdAdd/>\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default TodoInsert;","import React from \"react\";\r\nimport {\r\n  MdCheckBoxOutlineBlank,\r\n  MdCheckBox,\r\n  MdRemoveCircleOutline,\r\n} from \"react-icons/md\";\r\nimport cn from \"classnames\";\r\nimport \"./TodoListItem.scss\";\r\n\r\nconst TodoListItem = ({ todo, onRemove, onToggle, style }) => {\r\n  const { id, text, checked } = todo;\r\n  return (\r\n    <div className=\"TodoListItem-virtualized\" style={style}>\r\n      <div className=\"TodoListItem\">\r\n        <div\r\n          className={cn(\"checkbox\", { checked })}\r\n          onClick={() => onToggle(id)}\r\n        >\r\n          {checked ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\r\n          <div className=\"text\">{text}</div>\r\n        </div>\r\n        <div className=\"remove\" onClick={() => onRemove(id)}>\r\n          <MdRemoveCircleOutline />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(\r\n  TodoListItem,\r\n  (prevProps, nestProps) => prevProps.todo === nestProps.todo\r\n);\r\n","import React, { useCallback } from \"react\";\r\nimport { List } from \"react-virtualized\";\r\nimport TodoListItem from \"./TodoListItem\";\r\nimport \"./TodoList.scss\";\r\n\r\nconst TodoList = ({ todos, onRemove, onToggle }) => {\r\n  const rowRenderer = useCallback(\r\n    ({ index, key, style }) => {\r\n      const todo = todos[index];\r\n      return (\r\n        <TodoListItem\r\n          todo={todo}\r\n          key={key}\r\n          onRemove={onRemove}\r\n          onToggle={onToggle}\r\n          style={style}\r\n        />\r\n      );\r\n    },\r\n    [onRemove, onToggle, todos]\r\n  );\r\n  return (\r\n    <List\r\n      className=\"TodoList\"\r\n      width={493.33}\r\n      height={513}\r\n      rowCount={todos.length}\r\n      rowHeight={57}\r\n      rowRenderer={rowRenderer}\r\n      list={todos}\r\n      style={{ outline: \"none\" }}\r\n    />\r\n    // <div className=\"TodoList\">\r\n    //   {todos.map((todo) => (\r\n    //     <TodoListItem\r\n    //       todo={todo}\r\n    //       key={todo.id}\r\n    //       onRemove={onRemove}\r\n    //       onToggle={onToggle}\r\n    //     />\r\n    //   ))}\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(TodoList);\r\n","import React, { useState, useRef, useCallback } from \"react\";\nimport TodoTemplate from \"./components/TodoTemplate\";\nimport TodoInsert from \"./components/TodoInsert\";\nimport TodoList from \"./components/TodoList\";\n\nfunction createBulkTodos() {\n  const array = [];\n  for (let i = 1; i <= 2500; i++) {\n    array.push({\n      id: i,\n      text: `what to do ${i}`,\n      checked: false,\n    });\n  }\n  return array;\n}\n\nconst App = () => {\n  const [todos, setTodos] = useState(createBulkTodos);\n  //   [\n  //   {\n  //     id: 1,\n  //     text: \"study react\",\n  //     checked: true,\n  //   },\n  //   {\n  //     id: 2,\n  //     text: \"component styling\",\n  //     checked: true,\n  //   },\n  //   {\n  //     id: 3,\n  //     text: \"todo App\",\n  //     checked: false,\n  //   },\n  //   ]\n  const nextId = useRef(4);\n\n  const onInsert = useCallback(\n    (text) => {\n      const todo = {\n        id: nextId.current,\n        text,\n        checked: false,\n      };\n      setTodos((todos) => todos.concat(todo));\n      nextId.current += 1;\n    },\n    [todos]\n  );\n\n  const onRemove = useCallback(\n    (id) => {\n      setTodos((todos) => todos.filter((todo) => todo.id !== id));\n    },\n    [todos]\n  );\n\n  const onToggle = useCallback(\n    (id) => {\n      setTodos((todos) =>\n        todos.map((todo) =>\n          todo.id === id ? { ...todo, checked: !todo.checked } : todo\n        )\n      );\n    },\n    [todos]\n  );\n\n  return (\n    <TodoTemplate>\n      <TodoInsert onInsert={onInsert} />\n      <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle} />\n    </TodoTemplate>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}